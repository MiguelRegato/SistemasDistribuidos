openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8443
  description: Generated server url
paths:
  /api/users/{id}/image:
    get:
      tags:
      - user-rest-controller
      operationId: downloadImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - user-rest-controller
      operationId: editImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - imageFile
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/films/{id}:
    get:
      tags:
      - film-rest-controller
      operationId: getFilm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FilmComments'
    put:
      tags:
      - film-rest-controller
      operationId: editFilm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Film'
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Film'
    delete:
      tags:
      - film-rest-controller
      operationId: removeFilm
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Film'
  /api/films/{id}/image:
    get:
      tags:
      - film-rest-controller
      operationId: downloadImage_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - film-rest-controller
      operationId: editImage_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - imageFile
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - film-rest-controller
      operationId: uploadImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              required:
              - imageFile
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/comments/{id}:
    get:
      tags:
      - comment-rest-controller
      operationId: getComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
    put:
      tags:
      - comment-rest-controller
      operationId: editComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
    delete:
      tags:
      - comment-rest-controller
      operationId: removeComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
  /api/users/:
    post:
      tags:
      - user-rest-controller
      operationId: register
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/films/{id}/comments:
    get:
      tags:
      - film-rest-controller
      operationId: moreComments_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageComment'
    post:
      tags:
      - film-rest-controller
      operationId: addComment
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Comment'
  /api/films/:
    get:
      tags:
      - film-rest-controller
      operationId: moreFilms
      parameters:
      - name: genre
        in: query
        required: false
        schema:
          type: string
      - name: name
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageFilm'
    post:
      tags:
      - film-rest-controller
      operationId: addFilm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Film'
        required: true
      responses:
        "404":
          description: Not Found
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Film'
  /api/auth/logout:
    post:
      tags:
      - login-rest-controller
      operationId: logOut
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/auth/login:
    post:
      tags:
      - login-rest-controller
      operationId: login
      parameters:
      - name: accessToken
        in: cookie
        required: false
        schema:
          type: string
      - name: refreshToken
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/users/{id}:
    get:
      tags:
      - user-rest-controller
      operationId: getProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserComments'
    patch:
      tags:
      - user-rest-controller
      operationId: editProfile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: newEmail
        in: query
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{id}/password:
    patch:
      tags:
      - user-rest-controller
      operationId: editPassword
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: oldPassword
        in: query
        required: true
        schema:
          type: string
      - name: newPassword
        in: query
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{id}/following:
    get:
      tags:
      - user-rest-controller
      operationId: following
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageUser'
  /api/users/{id}/followers:
    get:
      tags:
      - user-rest-controller
      operationId: followers
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageUser'
  /api/users/{id}/followed:
    get:
      tags:
      - user-rest-controller
      operationId: followUnfollow
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{id}/comments:
    get:
      tags:
      - user-rest-controller
      operationId: moreComments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageComment'
  /api/users/me:
    get:
      tags:
      - user-rest-controller
      operationId: me
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserComments'
  /api/films/recommendations:
    get:
      tags:
      - film-rest-controller
      operationId: moreRecommendations
      parameters:
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageRecommendation'
  /api/films/menu:
    get:
      tags:
      - film-rest-controller
      operationId: getMenu
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FilmsList'
  /api/films/comments/number:
    get:
      tags:
      - film-rest-controller
      operationId: calculateChart
      responses:
        "404":
          description: Not Found
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: integer
                  format: int32
components:
  schemas:
    Film:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        releaseDate:
          type: string
          format: date-time
        averageStars:
          type: number
          format: float
        minAge:
          type: string
        genre:
          type: string
          enum:
          - ACTION
          - ADVENTURE
          - ANIMATION
          - COMEDY
          - DRAMA
          - HORROR
          - SCIENCE_FICTION
        duration:
          type: integer
          format: int32
        cast:
          type: string
        director:
          type: string
        plot:
          type: string
        image:
          type: boolean
        similar:
          type: array
          items:
            $ref: '#/components/schemas/Film'
    Comment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        stars:
          type: integer
          format: int32
        note:
          type: string
        film:
          $ref: '#/components/schemas/Film'
        user:
          $ref: '#/components/schemas/User'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        image:
          type: boolean
        followingCount:
          type: integer
          format: int32
        followersCount:
          type: integer
          format: int32
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    PageComment:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        empty:
          type: boolean
    Pageable:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        unpaged:
          type: boolean
        paged:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    UserComments:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        comments:
          $ref: '#/components/schemas/PageComment'
    PageUser:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/User'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        empty:
          type: boolean
    FilmComments:
      type: object
      properties:
        film:
          $ref: '#/components/schemas/Film'
        comments:
          $ref: '#/components/schemas/PageComment'
    PageRecommendation:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Recommendation'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        empty:
          type: boolean
    Recommendation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        film:
          $ref: '#/components/schemas/Film'
    FilmsList:
      type: object
      properties:
        recommendations:
          $ref: '#/components/schemas/PageRecommendation'
        trending:
          $ref: '#/components/schemas/PageFilm'
        action:
          $ref: '#/components/schemas/PageFilm'
        adventure:
          $ref: '#/components/schemas/PageFilm'
        animation:
          $ref: '#/components/schemas/PageFilm'
        comedy:
          $ref: '#/components/schemas/PageFilm'
        drama:
          $ref: '#/components/schemas/PageFilm'
        horror:
          $ref: '#/components/schemas/PageFilm'
        scifi:
          $ref: '#/components/schemas/PageFilm'
    PageFilm:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Film'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/Pageable'
        empty:
          type: boolean
